@using StockSharer.Web.Areas.Settings.ViewModels
@model StockSharer.Web.Areas.Settings.Models.ViewModels.RequestsViewModel
@{
    ViewBag.Title = "Game requests";
}

<div class="page-content-holder">
    <div class="container">
        <div class="page-content">
            <div class="row">
                <div class="col-sm-4 col-md-3">
                    @Html.Partial("_Sidebar", new AccountSidebarViewModel{Page = "Requests"})
                </div>
                <div class="col-sm-8 col-md-9">
                    <div class="settings-main">
                        <h1>Game requests</h1>
                        <h2>You have the following requests</h2>
                        <hr/>
                        <table class="table table-striped table-condensed table-hover">
                            <thead>
                                <tr>
                                    <th>
                                        Date
                                    </th>
                                    <th>
                                        Origin
                                    </th>
                                    <th>
                                        Game
                                    </th>
                                    <th>
                                        Nights
                                    </th>
                                    <th>
                                        Total
                                    </th>
                                    <th>
                                        Status
                                    </th>
                                    <th>
                                        Actions
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var request in Model.Requests)
                                {
                                    <tr>
                                        <td>
                                            @(request.IsToday ? request.Timestamp.ToString("HH:mm:ss") : request.StartDate.ToString("dd-MMM-yyyy"))
                                        </td>
                                        <td>
                                            @request.Origin
                                        </td>
                                        <td>
                                            @request.GameName
                                        </td>
                                        <td>
                                            @request.Nights
                                        </td>
                                        <td>
                                            @string.Format("{0:C}", request.TotalPrice)
                                        </td>
                                        <td>
                                            @if (request.Accepted.HasValue || request.Rejected.HasValue)
                                            {
                                                if (request.Accepted.HasValue)
                                                {
                                                    @:Accepted (@(request.AcceptedToday ? request.Accepted.Value.ToString("HH:mm:ss") : request.Accepted.Value.ToString("dd-MMM-yyyy")))
                                                }
                                                else
                                                {
                                                    @:Rejected (@(request.RejectedToday ? request.Rejected.Value.ToString("HH:mm:ss") : request.Rejected.Value.ToString("dd-MMM-yyyy")))
                                                }
                                            }
                                            else if (!request.IsToday)
                                            {
                                                @:Request expired
                                            }
                                            else
                                            {
                                                @:Open
                                            }
                                        </td>
                                        <td>
                                            @if (request.Received && request.IsToday && !request.Accepted.HasValue && !request.Rejected.HasValue)
                                            {
                                                <form class="inline-form" method="POST" action="/settings/requests/accept">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="Reference" value="@request.Reference"/>
                                                    <button class="btn btn-primary">Accept</button>
                                                </form>
                                                <form class="inline-form" method="POST" action="/settings/requests/reject">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="Reference" value="@request.Reference"/>
                                                    <button class="btn btn-default">Reject</button>
                                                </form>
                                            }
                                            @if (request.Accepted.HasValue && request.IsToday && !request.Received && request.UserIsAvailable)
                                            {
                                                <a href="#" class="btn btn-primary js-view-address" data-forename="@request.Forename" data-surname="@request.Surname" data-start-time="@request.StartTime.ToString("HH:mm")" data-end-time="@request.EndTime.ToString("HH:mm")" data-line1="@request.Line1" data-line2="@request.Line2" data-town="@request.Town" data-county="@request.County" data-postcode="@request.Postcode">View address</a>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="viewAddressModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h3 class="modal-title">User details</h3>
            </div>
            <div class="modal-body js-view-address-holder">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script id="view-address-template" type="text/x-handlebars-template">
    <h4>The following shows the address details for the owner</h4>
    <h3>Name</h3>
    <p><strong>{{forename}} {{surname}}</strong></p>
    <h3>Address</h3>
    <p><strong>{{line1}}<br/>{{line2}}<br/>{{town}}<br/>{{county}}<br/>{{postcode}}</strong></p>
    <h3>Availability</h3>
    <p><strong>{{startTime}} - {{endTime}}</strong></p>
</script>

@section styles
{
    @Styles.Render("~/bundles/styles/settings")
}

@section scripts
{
    @Scripts.Render("~/bundles/scripts/requests")
}